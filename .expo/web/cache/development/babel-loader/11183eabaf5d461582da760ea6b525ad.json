{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { List, Avatar, Divider, FAB, Portal, Dialog, Button, TextInput } from 'react-native-paper';\nimport { auth, firestore } from \"../firebase\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChatList = function ChatList() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dialogVisible = _useState2[0],\n      setDialogVisible = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      friend = _useState6[0],\n      setFriend = _useState6[1];\n\n  var navi = useNavigation();\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      chats = _useState8[0],\n      setChats = _useState8[1];\n\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      var _user$email;\n\n      setEmail((_user$email = user == null ? void 0 : user.email) != null ? _user$email : '');\n    });\n  }, []);\n  useEffect(function () {\n    firestore.collection('chats').where('users', 'array-contains', email).onSnapshot(function (qs) {\n      setChats(qs.docs);\n    });\n  }, [email]);\n\n  var createChats = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!email || !friend)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firestore.collection('chats').add({\n              users: [email, friend]\n            }));\n\n          case 4:\n            response = _context.sent;\n            setDialogVisible(false);\n            navi.navigate('Chat', {\n              chatId: response.id\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/bgImage.jpg\"),\n      resizeMode: \"cover\",\n      style: {\n        flex: 1,\n        justifyContent: \"center\"\n      },\n      children: [_jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: chats.reverse().map(function (item) {\n          return _jsxs(React.Fragment, {\n            children: [_jsx(List.Item, {\n              title: item.data().users.find(function (x) {\n                return x !== email;\n              }),\n              description: \"Hi, last message\",\n              left: function left() {\n                return _jsx(Avatar.Text, {\n                  label: item.data().users.find(function (x) {\n                    return x !== email;\n                  })[0],\n                  size: 55\n                });\n              },\n              onPress: function onPress() {\n                return navi.navigate('Chat', {\n                  chatId: item.id\n                });\n              }\n            }), _jsx(Divider, {\n              inset: true,\n              style: {\n                backgroundColor: '#4DAA9C',\n                height: 0.7\n              }\n            })]\n          });\n        })\n      }), _jsx(Portal, {\n        children: _jsxs(Dialog, {\n          visible: dialogVisible,\n          onDismiss: function onDismiss() {\n            return setDialogVisible(false);\n          },\n          children: [_jsx(Dialog.Title, {\n            children: \"New Chat\"\n          }), _jsx(Dialog.Content, {\n            children: _jsx(TextInput, {\n              keyboardType: \"email-address\",\n              label: \"Enter user email\",\n              value: friend,\n              onChangeText: function onChangeText(em) {\n                return setFriend(em);\n              }\n            })\n          }), _jsxs(Dialog.Actions, {\n            children: [_jsx(Button, {\n              onPress: function onPress() {\n                return setDialogVisible(false);\n              },\n              children: \"Cancel\"\n            }), _jsx(Button, {\n              onPress: function onPress() {\n                return createChats();\n              },\n              children: \"OK\"\n            })]\n          })]\n        })\n      }), _jsx(FAB, {\n        onPress: function onPress() {\n          return setDialogVisible(true);\n        },\n        icon: \"plus\",\n        style: {\n          position: 'absolute',\n          bottom: 16,\n          right: 16\n        }\n      })]\n    })\n  });\n};\n\nexport default ChatList;","map":{"version":3,"names":["React","useState","useEffect","List","Avatar","Divider","FAB","Portal","Dialog","Button","TextInput","auth","firestore","useNavigation","ChatList","dialogVisible","setDialogVisible","email","setEmail","friend","setFriend","navi","chats","setChats","onAuthStateChanged","user","collection","where","onSnapshot","qs","docs","createChats","add","users","response","navigate","chatId","id","flex","require","justifyContent","reverse","map","item","data","find","x","backgroundColor","height","em","position","bottom","right"],"sources":["C:/ChattApp/screens/ChatList.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { Text,View,ImageBackground } from 'react-native'\r\nimport { List,Avatar,Divider,FAB,Portal,Dialog,Button,TextInput } from 'react-native-paper'\r\nimport { auth, firestore } from '../firebase'\r\nimport { useNavigation} from '@react-navigation/native'\r\n\r\nconst ChatList=()=>{\r\n\r\n    const[dialogVisible,setDialogVisible]=useState(false)\r\n    const[email,setEmail]=useState('')\r\n    const[friend,setFriend]=useState('')\r\n    const navi= useNavigation()\r\n    const[chats,setChats]=useState([])\r\n\r\n    useEffect(()=>{\r\n       auth.onAuthStateChanged(user=>{\r\n            setEmail(user?.email ?? '')\r\n       })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        firestore.collection('chats').where('users','array-contains',email).onSnapshot((qs)=>{\r\n            setChats(qs.docs)\r\n        })\r\n     },[email])\r\n\r\n    const createChats=async()=>{\r\n        if(!email || !friend) return;\r\n        const response=await firestore.collection('chats').add({\r\n            users:[email,friend]\r\n        })\r\n        setDialogVisible(false)\r\n        navi.navigate('Chat',{chatId:response.id})\r\n    }\r\n\r\n    return(\r\n        <View style={{flex: 1}}>\r\n            <ImageBackground source={require('../assets/bgImage.jpg')} resizeMode=\"cover\" style={{flex: 1,\r\n            justifyContent: \"center\"}}>\r\n                <View style={{flex:1}}>\r\n                    {\r\n                        chats.reverse().map((item)=>{\r\n                            return(<React.Fragment>\r\n                                <List.Item\r\n                                    title={item.data().users.find(x=>x!==email)}\r\n                                    description=\"Hi, last message\"\r\n                                    left={()=><Avatar.Text label={item.data().users.find(x=>x!==email)[0]} size={55} />}\r\n                                    onPress={()=>navi.navigate('Chat',{chatId:item.id})}\r\n                                />\r\n                                <Divider inset style={{backgroundColor:'#4DAA9C',height:0.7}}/>\r\n                            </React.Fragment>)\r\n                        })\r\n                    }\r\n                    \r\n                </View>\r\n                <Portal>\r\n                <Dialog visible={dialogVisible} onDismiss={()=>setDialogVisible(false)} >\r\n                    <Dialog.Title>New Chat</Dialog.Title>\r\n                    <Dialog.Content>\r\n                        <TextInput keyboardType='email-address' label=\"Enter user email\" value={friend} onChangeText={(em)=>setFriend(em)}/>\r\n                    </Dialog.Content>\r\n                    <Dialog.Actions>\r\n                    <Button onPress={()=>setDialogVisible(false)}>Cancel</Button>\r\n                    <Button onPress={()=>createChats()}>OK</Button>\r\n                    </Dialog.Actions>\r\n                </Dialog>\r\n                </Portal>\r\n                <FAB onPress={()=>setDialogVisible(true)} icon='plus' style={{position:'absolute',bottom:16,right:16}} />\r\n            </ImageBackground>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ChatList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}