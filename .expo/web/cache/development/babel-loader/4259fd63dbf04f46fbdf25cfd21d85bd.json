{"ast":null,"code":"import React, { useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport ChatList from \"./screens/ChatList\";\nimport Chat from \"./screens/Chat\";\nimport Settings from \"./screens/Settings\";\nimport SignIn from \"./screens/SignIn\";\nimport SignUp from \"./screens/SignUp\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Provider } from 'react-native-paper';\nimport { auth } from \"./firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar TabNavigator = function TabNavigator() {\n  var navi = useNavigation();\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      if (!user) {\n        navi.navigate('SignUp');\n      }\n    });\n  }, []);\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'ChatList') {\n            iconName = focused ? 'chatbubbles-sharp' : 'chatbubbles-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'settings' : 'settings-outline';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#4DAA9C',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"ChatList\",\n      component: ChatList,\n      options: {\n        headerTitleAlign: 'center'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: Settings,\n      options: {\n        headerTitleAlign: 'center'\n      }\n    })]\n  });\n};\n\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Provider, {\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Main\",\n          component: TabNavigator,\n          options: {\n            headerShown: false,\n            headerTitleAlign: 'center'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Chat\",\n          component: Chat,\n          options: {\n            headerTitleAlign: 'center'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"SignUp\",\n          component: SignUp,\n          options: {\n            presentation: 'fullScreenModal',\n            headerBackVisible: false,\n            headerTitleAlign: 'center'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"SignIn\",\n          component: SignIn,\n          options: {\n            presentation: 'fullScreenModal',\n            headerBackVisible: false,\n            headerTitleAlign: 'center'\n          }\n        })]\n      })\n    })\n  });\n};\n\nexport default App;","map":{"version":3,"names":["React","useEffect","NavigationContainer","useNavigation","createNativeStackNavigator","ChatList","Chat","Settings","SignIn","SignUp","createBottomTabNavigator","Ionicons","Provider","auth","Stack","Tab","TabNavigator","navi","onAuthStateChanged","user","navigate","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerTitleAlign","App","headerShown","presentation","headerBackVisible"],"sources":["C:/ChattApp/App.js"],"sourcesContent":["import React,{useEffect} from 'react'\nimport {Text} from 'react-native'\nimport {NavigationContainer, useNavigation} from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport ChatList from './screens/ChatList'\nimport Chat from './screens/Chat'\nimport Settings from './screens/Settings'\nimport SignIn from './screens/SignIn'\nimport SignUp from './screens/SignUp'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {Ionicons} from '@expo/vector-icons'\nimport { Provider } from 'react-native-paper';\nimport { auth } from './firebase';\n\n\nconst Stack = createNativeStackNavigator();\n\nconst Tab = createBottomTabNavigator();\n\nconst TabNavigator=()=>{\n  const navi= useNavigation()\n  useEffect(()=>{\n    auth.onAuthStateChanged(user=>{\n      if(!user){\n        navi.navigate('SignUp')\n      }\n    })\n    \n  },[])\n  return(\n    <Tab.Navigator\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n\n        if (route.name === 'ChatList') {\n          iconName = focused\n            ? 'chatbubbles-sharp'\n            : 'chatbubbles-outline';\n        } else if (route.name === 'Settings') {\n          iconName = focused ? 'settings' : 'settings-outline';\n        }\n\n        return <Ionicons name={iconName} size={size} color={color} />;\n      },\n      tabBarActiveTintColor: '#4DAA9C',\n      tabBarInactiveTintColor: 'gray',\n    })}\n    >\n      <Tab.Screen name='ChatList' component={ChatList} options={{headerTitleAlign:'center'}}/>\n      <Tab.Screen name='Settings' component={Settings} options={{headerTitleAlign:'center'}}/>\n    </Tab.Navigator>\n  )\n}\n\nconst App=()=>{\n  return(\n    <NavigationContainer>\n      <Provider>\n        <Stack.Navigator>\n          <Stack.Screen name='Main' component={TabNavigator} options={{headerShown:false,headerTitleAlign:'center'}}/>\n          <Stack.Screen name='Chat' component={Chat} options={{headerTitleAlign:'center'}} />\n          <Stack.Screen name='SignUp' component={SignUp} options={{presentation:'fullScreenModal',headerBackVisible:false,headerTitleAlign:'center'}}/>\n          <Stack.Screen name='SignIn' component={SignIn} options={{presentation:'fullScreenModal',headerBackVisible:false,headerTitleAlign:'center'}}/>\n        </Stack.Navigator>\n      </Provider>\n    </NavigationContainer>\n  )\n}\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;AAEA,SAAQC,mBAAR,EAA6BC,aAA7B,QAAiD,0BAAjD;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,QAAP;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,IAAT;;;AAGA,IAAMC,KAAK,GAAGV,0BAA0B,EAAxC;AAEA,IAAMW,GAAG,GAAGL,wBAAwB,EAApC;;AAEA,IAAMM,YAAY,GAAC,SAAbA,YAAa,GAAI;EACrB,IAAMC,IAAI,GAAEd,aAAa,EAAzB;EACAF,SAAS,CAAC,YAAI;IACZY,IAAI,CAACK,kBAAL,CAAwB,UAAAC,IAAI,EAAE;MAC5B,IAAG,CAACA,IAAJ,EAAS;QACPF,IAAI,CAACG,QAAL,CAAc,QAAd;MACD;IACF,CAJD;EAMD,CAPQ,EAOP,EAPO,CAAT;EAQA,OACE,MAAC,GAAD,CAAK,SAAL;IACA,aAAa,EAAE;MAAA,IAAGC,KAAH,QAAGA,KAAH;MAAA,OAAgB;QAC7BC,UAAU,EAAE,2BAA8B;UAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;UAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;UAAA,IAAXC,IAAW,SAAXA,IAAW;UACxC,IAAIC,QAAJ;;UAEA,IAAIL,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;YAC7BD,QAAQ,GAAGH,OAAO,GACd,mBADc,GAEd,qBAFJ;UAGD,CAJD,MAIO,IAAIF,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;YACpCD,QAAQ,GAAGH,OAAO,GAAG,UAAH,GAAgB,kBAAlC;UACD;;UAED,OAAO,KAAC,QAAD;YAAU,IAAI,EAAEG,QAAhB;YAA0B,IAAI,EAAED,IAAhC;YAAsC,KAAK,EAAED;UAA7C,EAAP;QACD,CAb4B;QAc7BI,qBAAqB,EAAE,SAdM;QAe7BC,uBAAuB,EAAE;MAfI,CAAhB;IAAA,CADf;IAAA,WAmBE,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,UAAjB;MAA4B,SAAS,EAAExB,QAAvC;MAAiD,OAAO,EAAE;QAACyB,gBAAgB,EAAC;MAAlB;IAA1D,EAnBF,EAoBE,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,UAAjB;MAA4B,SAAS,EAAEvB,QAAvC;MAAiD,OAAO,EAAE;QAACuB,gBAAgB,EAAC;MAAlB;IAA1D,EApBF;EAAA,EADF;AAwBD,CAlCD;;AAoCA,IAAMC,GAAG,GAAC,SAAJA,GAAI,GAAI;EACZ,OACE,KAAC,mBAAD;IAAA,UACE,KAAC,QAAD;MAAA,UACE,MAAC,KAAD,CAAO,SAAP;QAAA,WACE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,MAAnB;UAA0B,SAAS,EAAEf,YAArC;UAAmD,OAAO,EAAE;YAACgB,WAAW,EAAC,KAAb;YAAmBF,gBAAgB,EAAC;UAApC;QAA5D,EADF,EAEE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,MAAnB;UAA0B,SAAS,EAAExB,IAArC;UAA2C,OAAO,EAAE;YAACwB,gBAAgB,EAAC;UAAlB;QAApD,EAFF,EAGE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,QAAnB;UAA4B,SAAS,EAAErB,MAAvC;UAA+C,OAAO,EAAE;YAACwB,YAAY,EAAC,iBAAd;YAAgCC,iBAAiB,EAAC,KAAlD;YAAwDJ,gBAAgB,EAAC;UAAzE;QAAxD,EAHF,EAIE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,QAAnB;UAA4B,SAAS,EAAEtB,MAAvC;UAA+C,OAAO,EAAE;YAACyB,YAAY,EAAC,iBAAd;YAAgCC,iBAAiB,EAAC,KAAlD;YAAwDJ,gBAAgB,EAAC;UAAzE;QAAxD,EAJF;MAAA;IADF;EADF,EADF;AAYD,CAbD;;AAeA,eAAeC,GAAf"},"metadata":{},"sourceType":"module"}