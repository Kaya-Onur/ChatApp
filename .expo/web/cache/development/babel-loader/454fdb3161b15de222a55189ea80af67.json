{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Color from \"./Color\";\nimport { warning, StylePropType } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    maxWidth: 300\n  },\n  quickReply: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    maxWidth: 200,\n    paddingVertical: 7,\n    paddingHorizontal: 12,\n    minHeight: 50,\n    borderRadius: 13,\n    margin: 3\n  },\n  quickReplyText: {\n    overflow: 'visible'\n  },\n  sendLink: {\n    borderWidth: 0\n  },\n  sendLinkText: {\n    color: Color.defaultBlue,\n    fontWeight: '600',\n    fontSize: 17\n  }\n});\n\nvar sameReply = function sameReply(currentReply) {\n  return function (reply) {\n    return currentReply.value === reply.value;\n  };\n};\n\nvar diffReply = function diffReply(currentReply) {\n  return function (reply) {\n    return currentReply.value !== reply.value;\n  };\n};\n\nvar QuickReplies = function (_Component) {\n  _inherits(QuickReplies, _Component);\n\n  var _super = _createSuper(QuickReplies);\n\n  function QuickReplies() {\n    var _this;\n\n    _classCallCheck(this, QuickReplies);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      replies: []\n    };\n\n    _this.handlePress = function (reply) {\n      return function () {\n        var currentMessage = _this.props.currentMessage;\n        var replies = _this.state.replies;\n\n        if (currentMessage) {\n          var type = currentMessage.quickReplies.type;\n\n          switch (type) {\n            case 'radio':\n              {\n                _this.handleSend([reply])();\n\n                return;\n              }\n\n            case 'checkbox':\n              {\n                if (replies.find(sameReply(reply))) {\n                  _this.setState({\n                    replies: _this.state.replies.filter(diffReply(reply))\n                  });\n                } else {\n                  _this.setState({\n                    replies: [].concat(_toConsumableArray(_this.state.replies), [reply])\n                  });\n                }\n\n                return;\n              }\n\n            default:\n              {\n                warning(\"onQuickReply unknown type: \" + type);\n                return;\n              }\n          }\n        }\n      };\n    };\n\n    _this.handleSend = function (replies) {\n      return function () {\n        var currentMessage = _this.props.currentMessage;\n\n        if (_this.props.onQuickReply) {\n          _this.props.onQuickReply(replies.map(function (reply) {\n            return _objectSpread(_objectSpread({}, reply), {}, {\n              messageId: currentMessage._id\n            });\n          }));\n        }\n      };\n    };\n\n    _this.shouldComponentDisplay = function () {\n      var _this$props = _this.props,\n          currentMessage = _this$props.currentMessage,\n          nextMessage = _this$props.nextMessage;\n      var hasReplies = !!currentMessage && !!currentMessage.quickReplies;\n      var hasNext = !!nextMessage && !!nextMessage._id;\n      var keepIt = currentMessage.quickReplies.keepIt;\n\n      if (hasReplies && !hasNext) {\n        return true;\n      }\n\n      if (hasReplies && hasNext && keepIt) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.renderQuickReplySend = function () {\n      var replies = _this.state.replies;\n      var _this$props2 = _this.props,\n          sendText = _this$props2.sendText,\n          customSend = _this$props2.renderQuickReplySend;\n      return _jsx(TouchableOpacity, {\n        style: [styles.quickReply, styles.sendLink],\n        onPress: _this.handleSend(replies),\n        children: customSend ? customSend() : _jsx(Text, {\n          style: styles.sendLinkText,\n          children: sendText\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(QuickReplies, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          currentMessage = _this$props3.currentMessage,\n          color = _this$props3.color,\n          quickReplyStyle = _this$props3.quickReplyStyle;\n      var replies = this.state.replies;\n\n      if (!this.shouldComponentDisplay()) {\n        return null;\n      }\n\n      var type = currentMessage.quickReplies.type;\n      return _jsxs(View, {\n        style: styles.container,\n        children: [currentMessage.quickReplies.values.map(function (reply, index) {\n          var selected = type === 'checkbox' && replies.find(sameReply(reply));\n          return _jsx(TouchableOpacity, {\n            onPress: _this2.handlePress(reply),\n            style: [styles.quickReply, quickReplyStyle, {\n              borderColor: color\n            }, selected && {\n              backgroundColor: color\n            }],\n            children: _jsx(Text, {\n              numberOfLines: 10,\n              ellipsizeMode: 'tail',\n              style: [styles.quickReplyText, {\n                color: selected ? Color.white : color\n              }],\n              children: reply.title\n            })\n          }, reply.value + \"-\" + index);\n        }), replies.length > 0 && this.renderQuickReplySend()]\n      });\n    }\n  }]);\n\n  return QuickReplies;\n}(Component);\n\nexport { QuickReplies as default };\nQuickReplies.defaultProps = {\n  currentMessage: {\n    quickReplies: []\n  },\n  onQuickReply: function onQuickReply() {},\n  color: Color.peterRiver,\n  sendText: 'Send',\n  keepReplies: false,\n  renderQuickReplySend: undefined,\n  quickReplyStyle: undefined\n};\nQuickReplies.propTypes = {\n  currentMessage: PropTypes.object.isRequired,\n  onQuickReply: PropTypes.func,\n  color: PropTypes.string,\n  sendText: PropTypes.string,\n  keepReplies: PropTypes.bool,\n  renderQuickReplySend: PropTypes.func,\n  quickReplyStyle: StylePropType\n};","map":{"version":3,"sources":["../src/QuickReplies.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Text, StyleSheet, View, TouchableOpacity, } from 'react-native';\nimport Color from './Color';\nimport { warning, StylePropType } from './utils';\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        maxWidth: 300,\n    },\n    quickReply: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderWidth: 1,\n        maxWidth: 200,\n        paddingVertical: 7,\n        paddingHorizontal: 12,\n        minHeight: 50,\n        borderRadius: 13,\n        margin: 3,\n    },\n    quickReplyText: {\n        overflow: 'visible',\n    },\n    sendLink: {\n        borderWidth: 0,\n    },\n    sendLinkText: {\n        color: Color.defaultBlue,\n        fontWeight: '600',\n        fontSize: 17,\n    },\n});\nconst sameReply = (currentReply) => (reply) => currentReply.value === reply.value;\nconst diffReply = (currentReply) => (reply) => currentReply.value !== reply.value;\nexport default class QuickReplies extends Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            replies: [],\n        };\n        this.handlePress = (reply) => () => {\n            const { currentMessage } = this.props;\n            const { replies } = this.state;\n            if (currentMessage) {\n                const { type } = currentMessage.quickReplies;\n                switch (type) {\n                    case 'radio': {\n                        this.handleSend([reply])();\n                        return;\n                    }\n                    case 'checkbox': {\n                        if (replies.find(sameReply(reply))) {\n                            this.setState({\n                                replies: this.state.replies.filter(diffReply(reply)),\n                            });\n                        }\n                        else {\n                            this.setState({ replies: [...this.state.replies, reply] });\n                        }\n                        return;\n                    }\n                    default: {\n                        warning(`onQuickReply unknown type: ${type}`);\n                        return;\n                    }\n                }\n            }\n        };\n        this.handleSend = (replies) => () => {\n            const { currentMessage } = this.props;\n            if (this.props.onQuickReply) {\n                this.props.onQuickReply(replies.map((reply) => ({\n                    ...reply,\n                    messageId: currentMessage._id,\n                })));\n            }\n        };\n        this.shouldComponentDisplay = () => {\n            const { currentMessage, nextMessage } = this.props;\n            const hasReplies = !!currentMessage && !!currentMessage.quickReplies;\n            const hasNext = !!nextMessage && !!nextMessage._id;\n            const keepIt = currentMessage.quickReplies.keepIt;\n            if (hasReplies && !hasNext) {\n                return true;\n            }\n            if (hasReplies && hasNext && keepIt) {\n                return true;\n            }\n            return false;\n        };\n        this.renderQuickReplySend = () => {\n            const { replies } = this.state;\n            const { sendText, renderQuickReplySend: customSend } = this.props;\n            return (<TouchableOpacity style={[styles.quickReply, styles.sendLink]} onPress={this.handleSend(replies)}>\n        {customSend ? (customSend()) : (<Text style={styles.sendLinkText}>{sendText}</Text>)}\n      </TouchableOpacity>);\n        };\n    }\n    render() {\n        const { currentMessage, color, quickReplyStyle } = this.props;\n        const { replies } = this.state;\n        if (!this.shouldComponentDisplay()) {\n            return null;\n        }\n        const { type } = currentMessage.quickReplies;\n        return (<View style={styles.container}>\n        {currentMessage.quickReplies.values.map((reply, index) => {\n            const selected = type === 'checkbox' && replies.find(sameReply(reply));\n            return (<TouchableOpacity onPress={this.handlePress(reply)} style={[\n                styles.quickReply,\n                quickReplyStyle,\n                { borderColor: color },\n                selected && { backgroundColor: color },\n            ]} key={`${reply.value}-${index}`}>\n                <Text numberOfLines={10} ellipsizeMode={'tail'} style={[\n                styles.quickReplyText,\n                { color: selected ? Color.white : color },\n            ]}>\n                  {reply.title}\n                </Text>\n              </TouchableOpacity>);\n        })}\n        {replies.length > 0 && this.renderQuickReplySend()}\n      </View>);\n    }\n}\nQuickReplies.defaultProps = {\n    currentMessage: {\n        quickReplies: [],\n    },\n    onQuickReply: () => { },\n    color: Color.peterRiver,\n    sendText: 'Send',\n    keepReplies: false,\n    renderQuickReplySend: undefined,\n    quickReplyStyle: undefined,\n};\nQuickReplies.propTypes = {\n    currentMessage: PropTypes.object.isRequired,\n    onQuickReply: PropTypes.func,\n    color: PropTypes.string,\n    sendText: PropTypes.string,\n    keepReplies: PropTypes.bool,\n    renderQuickReplySend: PropTypes.func,\n    quickReplyStyle: StylePropType,\n};\n//# sourceMappingURL=QuickReplies.js.map"]},"metadata":{},"sourceType":"module"}