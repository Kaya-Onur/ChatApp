{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { MIN_COMPOSER_HEIGHT, DEFAULT_PLACEHOLDER } from \"./Constant\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  textInput: _objectSpread(_objectSpread({\n    flex: 1,\n    marginLeft: 10,\n    fontSize: 16,\n    lineHeight: 16\n  }, Platform.select({\n    web: {\n      paddingTop: 6,\n      paddingLeft: 4\n    }\n  })), {}, {\n    marginTop: Platform.select({\n      ios: 6,\n      android: 0,\n      web: 6\n    }),\n    marginBottom: Platform.select({\n      ios: 5,\n      android: 3,\n      web: 4\n    })\n  })\n});\n\nvar Composer = function (_React$Component) {\n  _inherits(Composer, _React$Component);\n\n  var _super = _createSuper(Composer);\n\n  function Composer() {\n    var _this;\n\n    _classCallCheck(this, Composer);\n\n    _this = _super.apply(this, arguments);\n    _this.contentSize = undefined;\n\n    _this.onContentSizeChange = function (e) {\n      var contentSize = e.nativeEvent.contentSize;\n\n      if (!contentSize) {\n        return;\n      }\n\n      if (!_this.contentSize || _this.contentSize && (_this.contentSize.width !== contentSize.width || _this.contentSize.height !== contentSize.height)) {\n        _this.contentSize = contentSize;\n\n        _this.props.onInputSizeChanged(_this.contentSize);\n      }\n    };\n\n    _this.onChangeText = function (text) {\n      _this.props.onTextChanged(text);\n    };\n\n    return _this;\n  }\n\n  _createClass(Composer, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(TextInput, _objectSpread({\n        testID: this.props.placeholder,\n        accessible: true,\n        accessibilityLabel: this.props.placeholder,\n        placeholder: this.props.placeholder,\n        placeholderTextColor: this.props.placeholderTextColor,\n        multiline: this.props.multiline,\n        editable: !this.props.disableComposer,\n        onChange: this.onContentSizeChange,\n        onContentSizeChange: this.onContentSizeChange,\n        onChangeText: this.onChangeText,\n        style: [styles.textInput, this.props.textInputStyle, _objectSpread({\n          height: this.props.composerHeight\n        }, Platform.select({\n          web: {\n            outlineWidth: 0,\n            outlineColor: 'transparent',\n            outlineOffset: 0\n          }\n        }))],\n        autoFocus: this.props.textInputAutoFocus,\n        value: this.props.text,\n        enablesReturnKeyAutomatically: true,\n        underlineColorAndroid: \"transparent\",\n        keyboardAppearance: this.props.keyboardAppearance\n      }, this.props.textInputProps));\n    }\n  }]);\n\n  return Composer;\n}(React.Component);\n\nexport { Composer as default };\nComposer.defaultProps = {\n  composerHeight: MIN_COMPOSER_HEIGHT,\n  text: '',\n  placeholderTextColor: Color.defaultColor,\n  placeholder: DEFAULT_PLACEHOLDER,\n  textInputProps: null,\n  multiline: true,\n  disableComposer: false,\n  textInputStyle: {},\n  textInputAutoFocus: false,\n  keyboardAppearance: 'default',\n  onTextChanged: function onTextChanged() {},\n  onInputSizeChanged: function onInputSizeChanged() {}\n};\nComposer.propTypes = {\n  composerHeight: PropTypes.number,\n  text: PropTypes.string,\n  placeholder: PropTypes.string,\n  placeholderTextColor: PropTypes.string,\n  textInputProps: PropTypes.object,\n  onTextChanged: PropTypes.func,\n  onInputSizeChanged: PropTypes.func,\n  multiline: PropTypes.bool,\n  disableComposer: PropTypes.bool,\n  textInputStyle: StylePropType,\n  textInputAutoFocus: PropTypes.bool,\n  keyboardAppearance: PropTypes.string\n};","map":{"version":3,"sources":["../src/Composer.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Platform, StyleSheet, TextInput } from 'react-native';\nimport { MIN_COMPOSER_HEIGHT, DEFAULT_PLACEHOLDER } from './Constant';\nimport Color from './Color';\nimport { StylePropType } from './utils';\nconst styles = StyleSheet.create({\n    textInput: {\n        flex: 1,\n        marginLeft: 10,\n        fontSize: 16,\n        lineHeight: 16,\n        ...Platform.select({\n            web: {\n                paddingTop: 6,\n                paddingLeft: 4,\n            },\n        }),\n        marginTop: Platform.select({\n            ios: 6,\n            android: 0,\n            web: 6,\n        }),\n        marginBottom: Platform.select({\n            ios: 5,\n            android: 3,\n            web: 4,\n        }),\n    },\n});\nexport default class Composer extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.contentSize = undefined;\n        this.onContentSizeChange = (e) => {\n            const { contentSize } = e.nativeEvent;\n            // Support earlier versions of React Native on Android.\n            if (!contentSize) {\n                return;\n            }\n            if (!this.contentSize ||\n                (this.contentSize &&\n                    (this.contentSize.width !== contentSize.width ||\n                        this.contentSize.height !== contentSize.height))) {\n                this.contentSize = contentSize;\n                this.props.onInputSizeChanged(this.contentSize);\n            }\n        };\n        this.onChangeText = (text) => {\n            this.props.onTextChanged(text);\n        };\n    }\n    render() {\n        return (<TextInput testID={this.props.placeholder} accessible accessibilityLabel={this.props.placeholder} placeholder={this.props.placeholder} placeholderTextColor={this.props.placeholderTextColor} multiline={this.props.multiline} editable={!this.props.disableComposer} onChange={this.onContentSizeChange} onContentSizeChange={this.onContentSizeChange} onChangeText={this.onChangeText} style={[\n            styles.textInput,\n            this.props.textInputStyle,\n            {\n                height: this.props.composerHeight,\n                ...Platform.select({\n                    web: {\n                        outlineWidth: 0,\n                        outlineColor: 'transparent',\n                        outlineOffset: 0,\n                    },\n                }),\n            },\n        ]} autoFocus={this.props.textInputAutoFocus} value={this.props.text} enablesReturnKeyAutomatically underlineColorAndroid='transparent' keyboardAppearance={this.props.keyboardAppearance} {...this.props.textInputProps}/>);\n    }\n}\nComposer.defaultProps = {\n    composerHeight: MIN_COMPOSER_HEIGHT,\n    text: '',\n    placeholderTextColor: Color.defaultColor,\n    placeholder: DEFAULT_PLACEHOLDER,\n    textInputProps: null,\n    multiline: true,\n    disableComposer: false,\n    textInputStyle: {},\n    textInputAutoFocus: false,\n    keyboardAppearance: 'default',\n    onTextChanged: () => { },\n    onInputSizeChanged: () => { },\n};\nComposer.propTypes = {\n    composerHeight: PropTypes.number,\n    text: PropTypes.string,\n    placeholder: PropTypes.string,\n    placeholderTextColor: PropTypes.string,\n    textInputProps: PropTypes.object,\n    onTextChanged: PropTypes.func,\n    onInputSizeChanged: PropTypes.func,\n    multiline: PropTypes.bool,\n    disableComposer: PropTypes.bool,\n    textInputStyle: StylePropType,\n    textInputAutoFocus: PropTypes.bool,\n    keyboardAppearance: PropTypes.string,\n};\n//# sourceMappingURL=Composer.js.map"]},"metadata":{},"sourceType":"module"}