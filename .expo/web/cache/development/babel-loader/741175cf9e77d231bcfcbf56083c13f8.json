{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport dayjs from 'dayjs';\nimport Color from \"./Color\";\nimport { StylePropType, isSameDay } from \"./utils\";\nimport { DATE_FORMAT } from \"./Constant\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  text: {\n    backgroundColor: Color.backgroundTransparent,\n    color: Color.defaultColor,\n    fontSize: 12,\n    fontWeight: '600'\n  }\n});\n\nvar Day = function (_PureComponent) {\n  _inherits(Day, _PureComponent);\n\n  var _super = _createSuper(Day);\n\n  function Day() {\n    _classCallCheck(this, Day);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Day, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dateFormat = _this$props.dateFormat,\n          currentMessage = _this$props.currentMessage,\n          previousMessage = _this$props.previousMessage,\n          containerStyle = _this$props.containerStyle,\n          wrapperStyle = _this$props.wrapperStyle,\n          textStyle = _this$props.textStyle;\n\n      if (currentMessage && !isSameDay(currentMessage, previousMessage)) {\n        return _jsx(View, {\n          style: [styles.container, containerStyle],\n          children: _jsx(View, {\n            style: wrapperStyle,\n            children: _jsx(Text, {\n              style: [styles.text, textStyle],\n              children: dayjs(currentMessage.createdAt).locale(this.context.getLocale()).format(dateFormat)\n            })\n          })\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  return Day;\n}(PureComponent);\n\nexport { Day as default };\nDay.contextTypes = {\n  getLocale: PropTypes.func\n};\nDay.defaultProps = {\n  currentMessage: {\n    createdAt: null\n  },\n  previousMessage: {},\n  nextMessage: {},\n  containerStyle: {},\n  wrapperStyle: {},\n  textStyle: {},\n  dateFormat: DATE_FORMAT\n};\nDay.propTypes = {\n  currentMessage: PropTypes.object,\n  previousMessage: PropTypes.object,\n  nextMessage: PropTypes.object,\n  inverted: PropTypes.bool,\n  containerStyle: StylePropType,\n  wrapperStyle: StylePropType,\n  textStyle: StylePropType,\n  dateFormat: PropTypes.string\n};","map":{"version":3,"sources":["../src/Day.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,IAAgB,aAAhB,QAAqC,OAArC;;;;AASA,OAAO,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAP;AAEA,SAAS,aAAT,EAAwB,SAAxB;AACA,SAAS,WAAT;;AAGA,IAAM,MAAM,GAAG,UAAU,CAAC,MAAX,CAAkB;EAC/B,SAAS,EAAE;IACT,UAAU,EAAE,QADH;IAET,cAAc,EAAE,QAFP;IAGT,SAAS,EAAE,CAHF;IAIT,YAAY,EAAE;EAJL,CADoB;EAO/B,IAAI,EAAE;IACJ,eAAe,EAAE,KAAK,CAAC,qBADnB;IAEJ,KAAK,EAAE,KAAK,CAAC,YAFT;IAGJ,QAAQ,EAAE,EAHN;IAIJ,UAAU,EAAE;EAJR;AAPyB,CAAlB,CAAf;;IA0BqB,G;;;;;;;;;;;;;WA8BnB,kBAAM;MACJ,kBAOI,KAAK,KAPT;MAAA,IACE,UADF,eACE,UADF;MAAA,IAEE,cAFF,eAEE,cAFF;MAAA,IAGE,eAHF,eAGE,eAHF;MAAA,IAIE,cAJF,eAIE,cAJF;MAAA,IAKE,YALF,eAKE,YALF;MAAA,IAME,SANF,eAME,SANF;;MASA,IAAI,cAAc,IAAI,CAAC,SAAS,CAAC,cAAD,EAAiB,eAAjB,CAAhC,EAAoE;QAClE,OACE,KAAC,IAAD;UAAM,KAAK,EAAE,CAAC,MAAM,CAAC,SAAR,EAAmB,cAAnB,CAAb;UAAA,UACE,KAAC,IAAD;YAAM,KAAK,EAAE,YAAb;YAAA,UACE,KAAC,IAAD;cAAM,KAAK,EAAE,CAAC,MAAM,CAAC,IAAR,EAAc,SAAd,CAAb;cAAA,UACG,KAAK,CAAC,cAAc,CAAC,SAAhB,CAAL,CACE,MADF,CACS,KAAK,OAAL,CAAa,SAAb,EADT,EAEE,MAFF,CAES,UAFT;YADH;UADF;QADF,EADF;MAWD;;MACD,OAAO,IAAP;IACD;;;;EApDO,a;;SAFW,G;AAGZ,GAAA,CAAA,YAAA,GAAe;EACpB,SAAS,EAAE,SAAS,CAAC;AADD,CAAf;AAIA,GAAA,CAAA,YAAA,GAAe;EACpB,cAAc,EAAE;IACd,SAAS,EAAE;EADG,CADI;EAIpB,eAAe,EAAE,EAJG;EAKpB,WAAW,EAAE,EALO;EAMpB,cAAc,EAAE,EANI;EAOpB,YAAY,EAAE,EAPM;EAQpB,SAAS,EAAE,EARS;EASpB,UAAU,EAAE;AATQ,CAAf;AAYA,GAAA,CAAA,SAAA,GAAY;EACjB,cAAc,EAAE,SAAS,CAAC,MADT;EAEjB,eAAe,EAAE,SAAS,CAAC,MAFV;EAGjB,WAAW,EAAE,SAAS,CAAC,MAHN;EAIjB,QAAQ,EAAE,SAAS,CAAC,IAJH;EAKjB,cAAc,EAAE,aALC;EAMjB,YAAY,EAAE,aANG;EAOjB,SAAS,EAAE,aAPM;EAQjB,UAAU,EAAE,SAAS,CAAC;AARL,CAAZ","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, Text, View, } from 'react-native';\nimport dayjs from 'dayjs';\nimport Color from './Color';\nimport { StylePropType, isSameDay } from './utils';\nimport { DATE_FORMAT } from './Constant';\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: 5,\n        marginBottom: 10,\n    },\n    text: {\n        backgroundColor: Color.backgroundTransparent,\n        color: Color.defaultColor,\n        fontSize: 12,\n        fontWeight: '600',\n    },\n});\nexport default class Day extends PureComponent {\n    render() {\n        const { dateFormat, currentMessage, previousMessage, containerStyle, wrapperStyle, textStyle, } = this.props;\n        if (currentMessage && !isSameDay(currentMessage, previousMessage)) {\n            return (<View style={[styles.container, containerStyle]}>\n          <View style={wrapperStyle}>\n            <Text style={[styles.text, textStyle]}>\n              {dayjs(currentMessage.createdAt)\n                .locale(this.context.getLocale())\n                .format(dateFormat)}\n            </Text>\n          </View>\n        </View>);\n        }\n        return null;\n    }\n}\nDay.contextTypes = {\n    getLocale: PropTypes.func,\n};\nDay.defaultProps = {\n    currentMessage: {\n        createdAt: null,\n    },\n    previousMessage: {},\n    nextMessage: {},\n    containerStyle: {},\n    wrapperStyle: {},\n    textStyle: {},\n    dateFormat: DATE_FORMAT,\n};\nDay.propTypes = {\n    currentMessage: PropTypes.object,\n    previousMessage: PropTypes.object,\n    nextMessage: PropTypes.object,\n    inverted: PropTypes.bool,\n    containerStyle: StylePropType,\n    wrapperStyle: StylePropType,\n    textStyle: StylePropType,\n    dateFormat: PropTypes.string,\n};\n//# sourceMappingURL=Day.js.map"]},"metadata":{},"sourceType":"module"}