{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"containerStyle\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Composer from \"./Composer\";\nimport Send from \"./Send\";\nimport Actions from \"./Actions\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: Color.defaultColor,\n    backgroundColor: Color.white,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  primary: {\n    flexDirection: 'row',\n    alignItems: 'flex-end'\n  },\n  accessory: {\n    height: 44\n  }\n});\n\nvar InputToolbar = function (_React$Component) {\n  _inherits(InputToolbar, _React$Component);\n\n  var _super = _createSuper(InputToolbar);\n\n  function InputToolbar() {\n    var _this;\n\n    _classCallCheck(this, InputToolbar);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      position: 'absolute'\n    };\n    _this.keyboardWillShowListener = undefined;\n    _this.keyboardWillHideListener = undefined;\n\n    _this.keyboardWillShow = function () {\n      if (_this.state.position !== 'relative') {\n        _this.setState({\n          position: 'relative'\n        });\n      }\n    };\n\n    _this.keyboardWillHide = function () {\n      if (_this.state.position !== 'absolute') {\n        _this.setState({\n          position: 'absolute'\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(InputToolbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.keyboardWillShowListener = Keyboard.addListener('keyboardWillShow', this.keyboardWillShow);\n      this.keyboardWillHideListener = Keyboard.addListener('keyboardWillHide', this.keyboardWillHide);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.keyboardWillShowListener) {\n        this.keyboardWillShowListener.remove();\n      }\n\n      if (this.keyboardWillHideListener) {\n        this.keyboardWillHideListener.remove();\n      }\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this$props = this.props,\n          containerStyle = _this$props.containerStyle,\n          props = _objectWithoutProperties(_this$props, _excluded);\n\n      if (this.props.renderActions) {\n        return this.props.renderActions(props);\n      } else if (this.props.onPressActionButton) {\n        return _jsx(Actions, _objectSpread({}, props));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderSend\",\n    value: function renderSend() {\n      if (this.props.renderSend) {\n        return this.props.renderSend(this.props);\n      }\n\n      return _jsx(Send, _objectSpread({}, this.props));\n    }\n  }, {\n    key: \"renderComposer\",\n    value: function renderComposer() {\n      if (this.props.renderComposer) {\n        return this.props.renderComposer(this.props);\n      }\n\n      return _jsx(Composer, _objectSpread({}, this.props));\n    }\n  }, {\n    key: \"renderAccessory\",\n    value: function renderAccessory() {\n      if (this.props.renderAccessory) {\n        return _jsx(View, {\n          style: [styles.accessory, this.props.accessoryStyle],\n          children: this.props.renderAccessory(this.props)\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: [styles.container, {\n          position: this.state.position\n        }, this.props.containerStyle],\n        children: [_jsxs(View, {\n          style: [styles.primary, this.props.primaryStyle],\n          children: [this.renderActions(), this.renderComposer(), this.renderSend()]\n        }), this.renderAccessory()]\n      });\n    }\n  }]);\n\n  return InputToolbar;\n}(React.Component);\n\nexport { InputToolbar as default };\nInputToolbar.defaultProps = {\n  renderAccessory: null,\n  renderActions: null,\n  renderSend: null,\n  renderComposer: null,\n  containerStyle: {},\n  primaryStyle: {},\n  accessoryStyle: {},\n  onPressActionButton: function onPressActionButton() {}\n};\nInputToolbar.propTypes = {\n  renderAccessory: PropTypes.func,\n  renderActions: PropTypes.func,\n  renderSend: PropTypes.func,\n  renderComposer: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  containerStyle: StylePropType,\n  primaryStyle: StylePropType,\n  accessoryStyle: StylePropType\n};","map":{"version":3,"sources":["../src/InputToolbar.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, View, Keyboard, } from 'react-native';\nimport Composer from './Composer';\nimport Send from './Send';\nimport Actions from './Actions';\nimport Color from './Color';\nimport { StylePropType } from './utils';\nconst styles = StyleSheet.create({\n    container: {\n        borderTopWidth: StyleSheet.hairlineWidth,\n        borderTopColor: Color.defaultColor,\n        backgroundColor: Color.white,\n        bottom: 0,\n        left: 0,\n        right: 0,\n    },\n    primary: {\n        flexDirection: 'row',\n        alignItems: 'flex-end',\n    },\n    accessory: {\n        height: 44,\n    },\n});\nexport default class InputToolbar extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            position: 'absolute',\n        };\n        this.keyboardWillShowListener = undefined;\n        this.keyboardWillHideListener = undefined;\n        this.keyboardWillShow = () => {\n            if (this.state.position !== 'relative') {\n                this.setState({\n                    position: 'relative',\n                });\n            }\n        };\n        this.keyboardWillHide = () => {\n            if (this.state.position !== 'absolute') {\n                this.setState({\n                    position: 'absolute',\n                });\n            }\n        };\n    }\n    componentDidMount() {\n        this.keyboardWillShowListener = Keyboard.addListener('keyboardWillShow', this.keyboardWillShow);\n        this.keyboardWillHideListener = Keyboard.addListener('keyboardWillHide', this.keyboardWillHide);\n    }\n    componentWillUnmount() {\n        if (this.keyboardWillShowListener) {\n            this.keyboardWillShowListener.remove();\n        }\n        if (this.keyboardWillHideListener) {\n            this.keyboardWillHideListener.remove();\n        }\n    }\n    renderActions() {\n        const { containerStyle, ...props } = this.props;\n        if (this.props.renderActions) {\n            return this.props.renderActions(props);\n        }\n        else if (this.props.onPressActionButton) {\n            return <Actions {...props}/>;\n        }\n        return null;\n    }\n    renderSend() {\n        if (this.props.renderSend) {\n            return this.props.renderSend(this.props);\n        }\n        return <Send {...this.props}/>;\n    }\n    renderComposer() {\n        if (this.props.renderComposer) {\n            return this.props.renderComposer(this.props);\n        }\n        return <Composer {...this.props}/>;\n    }\n    renderAccessory() {\n        if (this.props.renderAccessory) {\n            return (<View style={[styles.accessory, this.props.accessoryStyle]}>\n          {this.props.renderAccessory(this.props)}\n        </View>);\n        }\n        return null;\n    }\n    render() {\n        return (<View style={[\n            styles.container,\n            { position: this.state.position },\n            this.props.containerStyle,\n        ]}>\n        <View style={[styles.primary, this.props.primaryStyle]}>\n          {this.renderActions()}\n          {this.renderComposer()}\n          {this.renderSend()}\n        </View>\n        {this.renderAccessory()}\n      </View>);\n    }\n}\nInputToolbar.defaultProps = {\n    renderAccessory: null,\n    renderActions: null,\n    renderSend: null,\n    renderComposer: null,\n    containerStyle: {},\n    primaryStyle: {},\n    accessoryStyle: {},\n    onPressActionButton: () => { },\n};\nInputToolbar.propTypes = {\n    renderAccessory: PropTypes.func,\n    renderActions: PropTypes.func,\n    renderSend: PropTypes.func,\n    renderComposer: PropTypes.func,\n    onPressActionButton: PropTypes.func,\n    containerStyle: StylePropType,\n    primaryStyle: StylePropType,\n    accessoryStyle: StylePropType,\n};\n//# sourceMappingURL=InputToolbar.js.map"]},"metadata":{},"sourceType":"module"}