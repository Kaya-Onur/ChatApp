{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Actions = function (_React$Component) {\n  _inherits(Actions, _React$Component);\n\n  var _super = _createSuper(Actions);\n\n  function Actions() {\n    var _this;\n\n    _classCallCheck(this, Actions);\n\n    _this = _super.apply(this, arguments);\n\n    _this.onActionsPress = function () {\n      var options = _this.props.options;\n      var optionKeys = Object.keys(options);\n      var cancelButtonIndex = optionKeys.indexOf('Cancel');\n\n      _this.context.actionSheet().showActionSheetWithOptions({\n        options: optionKeys,\n        cancelButtonIndex: cancelButtonIndex,\n        tintColor: _this.props.optionTintColor\n      }, function (buttonIndex) {\n        var key = optionKeys[buttonIndex];\n\n        if (key) {\n          options[key](_this.props);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Actions, [{\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      if (this.props.icon) {\n        return this.props.icon();\n      }\n\n      return _jsx(View, {\n        style: [styles.wrapper, this.props.wrapperStyle],\n        children: _jsx(Text, {\n          style: [styles.iconText, this.props.iconTextStyle],\n          children: \"+\"\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(TouchableOpacity, {\n        style: [styles.container, this.props.containerStyle],\n        onPress: this.props.onPressActionButton || this.onActionsPress,\n        children: this.renderIcon()\n      });\n    }\n  }]);\n\n  return Actions;\n}(React.Component);\n\nexport { Actions as default };\nActions.defaultProps = {\n  options: {},\n  optionTintColor: Color.optionTintColor,\n  icon: undefined,\n  containerStyle: {},\n  iconTextStyle: {},\n  wrapperStyle: {}\n};\nActions.propTypes = {\n  onSend: PropTypes.func,\n  options: PropTypes.object,\n  optionTintColor: PropTypes.string,\n  icon: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  wrapperStyle: StylePropType,\n  containerStyle: StylePropType\n};\nActions.contextTypes = {\n  actionSheet: PropTypes.func\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: 26,\n    height: 26,\n    marginLeft: 10,\n    marginBottom: 10\n  },\n  wrapper: {\n    borderRadius: 13,\n    borderColor: Color.defaultColor,\n    borderWidth: 2,\n    flex: 1\n  },\n  iconText: {\n    color: Color.defaultColor,\n    fontWeight: 'bold',\n    fontSize: 16,\n    backgroundColor: Color.backgroundTransparent,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["../src/Actions.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAiC,OAAjC;;;;;AAUA,OAAO,KAAP;AACA,SAAS,aAAT;;;IAYqB,O;;;;;EAArB,mBAAA;IAAA;;IAAA;;;;IAwBE,MAAA,cAAA,GAAiB,YAAK;MACpB,IAAQ,OAAR,GAAoB,MAAK,KAAzB,CAAQ,OAAR;MACA,IAAM,UAAU,GAAG,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAnB;MACA,IAAM,iBAAiB,GAAG,UAAU,CAAC,OAAX,CAAmB,QAAnB,CAA1B;;MACA,MAAK,OAAL,CAAa,WAAb,GAA2B,0BAA3B,CACE;QACE,OAAO,EAAE,UADX;QAEE,iBAAiB,EAAjB,iBAFF;QAGE,SAAS,EAAE,MAAK,KAAL,CAAW;MAHxB,CADF,EAME,UAAC,WAAD,EAAwB;QACtB,IAAM,GAAG,GAAG,UAAU,CAAC,WAAD,CAAtB;;QACA,IAAI,GAAJ,EAAS;UACP,OAAQ,CAAC,GAAD,CAAR,CAAc,MAAK,KAAnB;QACD;MACF,CAXH;IAaD,CAjBD;;IAxBF;EAgEC;;;;WArBC,sBAAU;MACR,IAAI,KAAK,KAAL,CAAW,IAAf,EAAqB;QACnB,OAAO,KAAK,KAAL,CAAW,IAAX,EAAP;MACD;;MACD,OACE,KAAC,IAAD;QAAM,KAAK,EAAE,CAAC,MAAM,CAAC,OAAR,EAAiB,KAAK,KAAL,CAAW,YAA5B,CAAb;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAE,CAAC,MAAM,CAAC,QAAR,EAAkB,KAAK,KAAL,CAAW,aAA7B,CAAb;UAAA;QAAA;MADF,EADF;IAKD;;;WAED,kBAAM;MACJ,OACE,KAAC,gBAAD;QACE,KAAK,EAAE,CAAC,MAAM,CAAC,SAAR,EAAmB,KAAK,KAAL,CAAW,cAA9B,CADT;QAEE,OAAO,EAAE,KAAK,KAAL,CAAW,mBAAX,IAAkC,KAAK,cAFlD;QAAA,UAIG,KAAK,UAAL;MAJH,EADF;IAQD;;;;EA/DkC,KAAK,CAAC,S;;SAAtB,O;AACZ,OAAA,CAAA,YAAA,GAA6B;EAClC,OAAO,EAAE,EADyB;EAElC,eAAe,EAAE,KAAK,CAAC,eAFW;EAGlC,IAAI,EAAE,SAH4B;EAIlC,cAAc,EAAE,EAJkB;EAKlC,aAAa,EAAE,EALmB;EAMlC,YAAY,EAAE;AANoB,CAA7B;AASA,OAAA,CAAA,SAAA,GAAY;EACjB,MAAM,EAAE,SAAS,CAAC,IADD;EAEjB,OAAO,EAAE,SAAS,CAAC,MAFF;EAGjB,eAAe,EAAE,SAAS,CAAC,MAHV;EAIjB,IAAI,EAAE,SAAS,CAAC,IAJC;EAKjB,mBAAmB,EAAE,SAAS,CAAC,IALd;EAMjB,YAAY,EAAE,aANG;EAOjB,cAAc,EAAE;AAPC,CAAZ;AAUA,OAAA,CAAA,YAAA,GAAe;EACpB,WAAW,EAAE,SAAS,CAAC;AADH,CAAf;AA8CT,IAAM,MAAM,GAAG,UAAU,CAAC,MAAX,CAAkB;EAC/B,SAAS,EAAE;IACT,KAAK,EAAE,EADE;IAET,MAAM,EAAE,EAFC;IAGT,UAAU,EAAE,EAHH;IAIT,YAAY,EAAE;EAJL,CADoB;EAO/B,OAAO,EAAE;IACP,YAAY,EAAE,EADP;IAEP,WAAW,EAAE,KAAK,CAAC,YAFZ;IAGP,WAAW,EAAE,CAHN;IAIP,IAAI,EAAE;EAJC,CAPsB;EAa/B,QAAQ,EAAE;IACR,KAAK,EAAE,KAAK,CAAC,YADL;IAER,UAAU,EAAE,MAFJ;IAGR,QAAQ,EAAE,EAHF;IAIR,eAAe,EAAE,KAAK,CAAC,qBAJf;IAKR,SAAS,EAAE;EALH;AAbqB,CAAlB,CAAf","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, } from 'react-native';\nimport Color from './Color';\nimport { StylePropType } from './utils';\nexport default class Actions extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.onActionsPress = () => {\n            const { options } = this.props;\n            const optionKeys = Object.keys(options);\n            const cancelButtonIndex = optionKeys.indexOf('Cancel');\n            this.context.actionSheet().showActionSheetWithOptions({\n                options: optionKeys,\n                cancelButtonIndex,\n                tintColor: this.props.optionTintColor,\n            }, (buttonIndex) => {\n                const key = optionKeys[buttonIndex];\n                if (key) {\n                    options[key](this.props);\n                }\n            });\n        };\n    }\n    renderIcon() {\n        if (this.props.icon) {\n            return this.props.icon();\n        }\n        return (<View style={[styles.wrapper, this.props.wrapperStyle]}>\n        <Text style={[styles.iconText, this.props.iconTextStyle]}>+</Text>\n      </View>);\n    }\n    render() {\n        return (<TouchableOpacity style={[styles.container, this.props.containerStyle]} onPress={this.props.onPressActionButton || this.onActionsPress}>\n        {this.renderIcon()}\n      </TouchableOpacity>);\n    }\n}\nActions.defaultProps = {\n    options: {},\n    optionTintColor: Color.optionTintColor,\n    icon: undefined,\n    containerStyle: {},\n    iconTextStyle: {},\n    wrapperStyle: {},\n};\nActions.propTypes = {\n    onSend: PropTypes.func,\n    options: PropTypes.object,\n    optionTintColor: PropTypes.string,\n    icon: PropTypes.func,\n    onPressActionButton: PropTypes.func,\n    wrapperStyle: StylePropType,\n    containerStyle: StylePropType,\n};\nActions.contextTypes = {\n    actionSheet: PropTypes.func,\n};\nconst styles = StyleSheet.create({\n    container: {\n        width: 26,\n        height: 26,\n        marginLeft: 10,\n        marginBottom: 10,\n    },\n    wrapper: {\n        borderRadius: 13,\n        borderColor: Color.defaultColor,\n        borderWidth: 2,\n        flex: 1,\n    },\n    iconText: {\n        color: Color.defaultColor,\n        fontWeight: 'bold',\n        fontSize: 16,\n        backgroundColor: Color.backgroundTransparent,\n        textAlign: 'center',\n    },\n});\n//# sourceMappingURL=Actions.js.map"]},"metadata":{},"sourceType":"module"}