{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Color.defaultColor,\n    borderRadius: 15,\n    height: 30,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  text: {\n    backgroundColor: Color.backgroundTransparent,\n    color: Color.white,\n    fontSize: 12\n  },\n  activityIndicator: {\n    marginTop: Platform.select({\n      ios: -14,\n      android: -16,\n      default: -15\n    })\n  }\n});\n\nvar LoadEarlier = function (_React$Component) {\n  _inherits(LoadEarlier, _React$Component);\n\n  var _super = _createSuper(LoadEarlier);\n\n  function LoadEarlier() {\n    _classCallCheck(this, LoadEarlier);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoadEarlier, [{\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      if (this.props.isLoadingEarlier === false) {\n        return _jsx(Text, {\n          style: [styles.text, this.props.textStyle],\n          children: this.props.label\n        });\n      }\n\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          style: [styles.text, this.props.textStyle, {\n            opacity: 0\n          }],\n          children: this.props.label\n        }), _jsx(ActivityIndicator, {\n          color: this.props.activityIndicatorColor,\n          size: this.props.activityIndicatorSize,\n          style: [styles.activityIndicator, this.props.activityIndicatorStyle]\n        })]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return _jsx(TouchableOpacity, {\n        style: [styles.container, this.props.containerStyle],\n        onPress: function onPress() {\n          if (_this.props.onLoadEarlier) {\n            _this.props.onLoadEarlier();\n          }\n        },\n        disabled: this.props.isLoadingEarlier === true,\n        accessibilityTraits: \"button\",\n        children: _jsx(View, {\n          style: [styles.wrapper, this.props.wrapperStyle],\n          children: this.renderLoading()\n        })\n      });\n    }\n  }]);\n\n  return LoadEarlier;\n}(React.Component);\n\nexport { LoadEarlier as default };\nLoadEarlier.defaultProps = {\n  onLoadEarlier: function onLoadEarlier() {},\n  isLoadingEarlier: false,\n  label: 'Load earlier messages',\n  containerStyle: {},\n  wrapperStyle: {},\n  textStyle: {},\n  activityIndicatorStyle: {},\n  activityIndicatorColor: 'white',\n  activityIndicatorSize: 'small'\n};\nLoadEarlier.propTypes = {\n  onLoadEarlier: PropTypes.func,\n  isLoadingEarlier: PropTypes.bool,\n  label: PropTypes.string,\n  containerStyle: StylePropType,\n  wrapperStyle: StylePropType,\n  textStyle: StylePropType,\n  activityIndicatorStyle: StylePropType,\n  activityIndicatorColor: PropTypes.string,\n  activityIndicatorSize: PropTypes.string\n};","map":{"version":3,"sources":["../src/LoadEarlier.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { ActivityIndicator, Platform, StyleSheet, Text, TouchableOpacity, View, } from 'react-native';\nimport Color from './Color';\nimport { StylePropType } from './utils';\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        marginTop: 5,\n        marginBottom: 10,\n    },\n    wrapper: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Color.defaultColor,\n        borderRadius: 15,\n        height: 30,\n        paddingLeft: 10,\n        paddingRight: 10,\n    },\n    text: {\n        backgroundColor: Color.backgroundTransparent,\n        color: Color.white,\n        fontSize: 12,\n    },\n    activityIndicator: {\n        marginTop: Platform.select({\n            ios: -14,\n            android: -16,\n            default: -15,\n        }),\n    },\n});\nexport default class LoadEarlier extends React.Component {\n    renderLoading() {\n        if (this.props.isLoadingEarlier === false) {\n            return (<Text style={[styles.text, this.props.textStyle]}>\n          {this.props.label}\n        </Text>);\n        }\n        return (<View>\n        <Text style={[styles.text, this.props.textStyle, { opacity: 0 }]}>\n          {this.props.label}\n        </Text>\n        <ActivityIndicator color={this.props.activityIndicatorColor} size={this.props.activityIndicatorSize} style={[styles.activityIndicator, this.props.activityIndicatorStyle]}/>\n      </View>);\n    }\n    render() {\n        return (<TouchableOpacity style={[styles.container, this.props.containerStyle]} onPress={() => {\n            if (this.props.onLoadEarlier) {\n                this.props.onLoadEarlier();\n            }\n        }} disabled={this.props.isLoadingEarlier === true} accessibilityTraits='button'>\n        <View style={[styles.wrapper, this.props.wrapperStyle]}>\n          {this.renderLoading()}\n        </View>\n      </TouchableOpacity>);\n    }\n}\nLoadEarlier.defaultProps = {\n    onLoadEarlier: () => { },\n    isLoadingEarlier: false,\n    label: 'Load earlier messages',\n    containerStyle: {},\n    wrapperStyle: {},\n    textStyle: {},\n    activityIndicatorStyle: {},\n    activityIndicatorColor: 'white',\n    activityIndicatorSize: 'small',\n};\nLoadEarlier.propTypes = {\n    onLoadEarlier: PropTypes.func,\n    isLoadingEarlier: PropTypes.bool,\n    label: PropTypes.string,\n    containerStyle: StylePropType,\n    wrapperStyle: StylePropType,\n    textStyle: StylePropType,\n    activityIndicatorStyle: StylePropType,\n    activityIndicatorColor: PropTypes.string,\n    activityIndicatorSize: PropTypes.string,\n};\n//# sourceMappingURL=LoadEarlier.js.map"]},"metadata":{},"sourceType":"module"}