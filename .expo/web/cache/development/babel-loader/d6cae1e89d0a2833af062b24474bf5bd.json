{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LightboxOverlay from \"./LightboxOverlay\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Lightbox = function (_Component) {\n  _inherits(Lightbox, _Component);\n\n  var _super = _createSuper(Lightbox);\n\n  function Lightbox() {\n    var _this;\n\n    _classCallCheck(this, Lightbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isOpen: false,\n      origin: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      },\n      layoutOpacity: new Animated.Value(1)\n    };\n\n    _this.getContent = function () {\n      if (_this.props.renderContent) {\n        return _this.props.renderContent();\n      } else if (_this.props.activeProps) {\n        return cloneElement(Children.only(_this.props.children), _this.props.activeProps);\n      }\n\n      return _this.props.children;\n    };\n\n    _this.getOverlayProps = function () {\n      return {\n        isOpen: _this.state.isOpen,\n        origin: _this.state.origin,\n        renderHeader: _this.props.renderHeader,\n        swipeToDismiss: _this.props.swipeToDismiss,\n        springConfig: _this.props.springConfig,\n        backgroundColor: _this.props.backgroundColor,\n        children: _this.getContent(),\n        didOpen: _this.props.didOpen,\n        willClose: _this.props.willClose,\n        onClose: _this.onClose\n      };\n    };\n\n    _this.open = function () {\n      _this._root.measure(function (ox, oy, width, height, px, py) {\n        _this.props.onOpen();\n\n        _this.setState({\n          isOpen: _this.props.navigator ? true : false,\n          isAnimating: true,\n          origin: {\n            width: width,\n            height: height,\n            x: px,\n            y: py\n          }\n        }, function () {\n          _this.props.didOpen();\n\n          if (_this.props.navigator) {\n            var route = {\n              component: LightboxOverlay,\n              passProps: _this.getOverlayProps()\n            };\n\n            var routes = _this.props.navigator.getCurrentRoutes();\n\n            routes.push(route);\n\n            _this.props.navigator.immediatelyResetRouteStack(routes);\n          } else {\n            _this.setState({\n              isOpen: true\n            });\n          }\n\n          setTimeout(function () {\n            _this._root && _this.state.layoutOpacity.setValue(0);\n          });\n        });\n      });\n    };\n\n    _this.close = function () {\n      throw new Error('Lightbox.close method is deprecated. Use renderHeader(close) prop instead.');\n    };\n\n    _this.onClose = function () {\n      _this.state.layoutOpacity.setValue(1);\n\n      _this.setState({\n        isOpen: false\n      }, _this.props.onClose);\n\n      if (_this.props.navigator) {\n        var routes = _this.props.navigator.getCurrentRoutes();\n\n        routes.pop();\n\n        _this.props.navigator.immediatelyResetRouteStack(routes);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Lightbox, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        ref: function ref(component) {\n          return _this2._root = component;\n        },\n        style: this.props.style,\n        onLayout: function onLayout() {},\n        children: [_jsx(Animated.View, {\n          style: {\n            opacity: this.state.layoutOpacity\n          },\n          children: _jsx(TouchableHighlight, {\n            underlayColor: this.props.underlayColor,\n            onPress: this.open,\n            onLongPress: this.props.onLongPress,\n            children: this.props.children\n          })\n        }), this.props.navigator ? false : _jsx(LightboxOverlay, _objectSpread({}, this.getOverlayProps()))]\n      });\n    }\n  }]);\n\n  return Lightbox;\n}(Component);\n\nLightbox.propTypes = {\n  activeProps: PropTypes.object,\n  renderHeader: PropTypes.func,\n  renderContent: PropTypes.func,\n  underlayColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  didOpen: PropTypes.func,\n  onOpen: PropTypes.func,\n  willClose: PropTypes.func,\n  onClose: PropTypes.func,\n  springConfig: PropTypes.shape({\n    tension: PropTypes.number,\n    friction: PropTypes.number\n  }),\n  swipeToDismiss: PropTypes.bool\n};\nLightbox.defaultProps = {\n  swipeToDismiss: true,\n  onOpen: function onOpen() {},\n  didOpen: function didOpen() {},\n  willClose: function willClose() {},\n  onClose: function onClose() {},\n  onLongPress: function onLongPress() {}\n};\nexport { Lightbox as default };","map":{"version":3,"names":["React","Component","Children","cloneElement","PropTypes","LightboxOverlay","Lightbox","state","isOpen","origin","x","y","width","height","layoutOpacity","Animated","Value","getContent","props","renderContent","activeProps","only","children","getOverlayProps","renderHeader","swipeToDismiss","springConfig","backgroundColor","didOpen","willClose","onClose","open","_root","measure","ox","oy","px","py","onOpen","setState","navigator","isAnimating","route","component","passProps","routes","getCurrentRoutes","push","immediatelyResetRouteStack","setTimeout","setValue","close","Error","pop","style","opacity","underlayColor","onLongPress","propTypes","object","func","string","shape","tension","number","friction","bool","defaultProps"],"sources":["C:/ChattApp/node_modules/react-native-lightbox/Lightbox.js"],"sourcesContent":["import React, { Component,  Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, TouchableHighlight, View } from 'react-native';\n\nimport LightboxOverlay from './LightboxOverlay';\n\nexport default class Lightbox extends Component {\n  static propTypes = {\n    activeProps:     PropTypes.object,\n    renderHeader:    PropTypes.func,\n    renderContent:   PropTypes.func,\n    underlayColor:   PropTypes.string,\n    backgroundColor: PropTypes.string,\n    didOpen:         PropTypes.func,\n    onOpen:          PropTypes.func,\n    willClose:       PropTypes.func,\n    onClose:         PropTypes.func,\n    springConfig:    PropTypes.shape({\n      tension:       PropTypes.number,\n      friction:      PropTypes.number,\n    }),\n    swipeToDismiss:  PropTypes.bool,\n  };\n\n  static defaultProps = {\n    swipeToDismiss: true,\n    onOpen: () => {},\n    didOpen: () => {},\n    willClose: () => {},\n    onClose: () => {},\n    onLongPress: () => {},\n  };\n\n  state = {\n    isOpen: false,\n    origin: {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n    },\n    layoutOpacity: new Animated.Value(1),\n  };\n\n  getContent = () => {\n    if(this.props.renderContent) {\n      return this.props.renderContent();\n    } else if(this.props.activeProps) {\n      return cloneElement(\n        Children.only(this.props.children),\n        this.props.activeProps\n      );\n    }\n    return this.props.children;\n  }\n\n  getOverlayProps = () => ({\n    isOpen: this.state.isOpen,\n    origin: this.state.origin,\n    renderHeader: this.props.renderHeader,\n    swipeToDismiss: this.props.swipeToDismiss,\n    springConfig: this.props.springConfig,\n    backgroundColor: this.props.backgroundColor,\n    children: this.getContent(),\n    didOpen: this.props.didOpen,\n    willClose: this.props.willClose,\n    onClose: this.onClose,\n  })\n\n  open = () => {\n    this._root.measure((ox, oy, width, height, px, py) => {\n      this.props.onOpen();\n\n      this.setState({\n        isOpen: (this.props.navigator ? true : false),\n        isAnimating: true,\n        origin: {\n          width,\n          height,\n          x: px,\n          y: py,\n        },\n      }, () => {\n        this.props.didOpen();\n        if(this.props.navigator) {\n          const route = {\n            component: LightboxOverlay,\n            passProps: this.getOverlayProps(),\n          };\n          const routes = this.props.navigator.getCurrentRoutes();\n          routes.push(route);\n          this.props.navigator.immediatelyResetRouteStack(routes);\n        } else {\n          this.setState({\n            isOpen: true,\n          });\n        }\n        setTimeout(() => {\n          this._root && this.state.layoutOpacity.setValue(0);\n        });\n      });\n    });\n  }\n\n  close = () => {\n    throw new Error('Lightbox.close method is deprecated. Use renderHeader(close) prop instead.')\n  }\n\n  onClose = () => {\n    this.state.layoutOpacity.setValue(1);\n    this.setState({\n      isOpen: false,\n    }, this.props.onClose);\n    if(this.props.navigator) {\n      const routes = this.props.navigator.getCurrentRoutes();\n      routes.pop();\n      this.props.navigator.immediatelyResetRouteStack(routes);\n    }\n  }\n\n  render() {\n    // measure will not return anything useful if we dont attach a onLayout handler on android\n    return (\n      <View\n        ref={component => this._root = component}\n        style={this.props.style}\n        onLayout={() => {}}\n      >\n        <Animated.View style={{opacity: this.state.layoutOpacity}}>\n          <TouchableHighlight\n            underlayColor={this.props.underlayColor}\n            onPress={this.open}\n            onLongPress={this.props.onLongPress}\n          >\n            {this.props.children}\n          </TouchableHighlight>\n        </Animated.View>\n        {this.props.navigator ? false : <LightboxOverlay {...this.getOverlayProps()} />}\n      </View>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}